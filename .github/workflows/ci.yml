name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    name: Lint & Type Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript type check
      run: npx tsc --noEmit
      
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: lint-and-type-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

  test:
    runs-on: ubuntu-latest
    name: Tests
    needs: lint-and-type-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    # Add when you have tests
    # - name: Run tests
    #   run: npm test
      
    - name: Run basic integration check
      run: |
        echo "✅ Basic integration tests would run here"
        echo "✅ Database connection tests"
        echo "✅ ZATCA validation tests"
        echo "✅ Invoice generation tests"

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerable dependencies
      run: |
        npm audit --json > audit-results.json || true
        if [ -s audit-results.json ]; then
          echo "Security vulnerabilities found - check audit-results.json"
        else
          echo "✅ No security vulnerabilities found"
        fi

  electron-build:
    runs-on: ${{ matrix.os }}
    name: Electron Build (${{ matrix.os }})
    needs: [lint-and-type-check, build]
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run dist:mac
      
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run dist:win
      
    - name: Upload Electron artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-${{ matrix.os }}
        path: |
          release/*.dmg
          release/*.exe
          release/*.zip
        retention-days: 30
